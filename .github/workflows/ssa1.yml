name: Demo 1 - Regular SSA Pipeline

on:
  workflow_dispatch:
    inputs:
      port_payload:
        required: true
        description: "Port's payload with context and details about the run."
        type: string

jobs:
  pipeline-progress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log Step 1 Progress
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).runId }}
          logMessage: |
            [Status: Step 1 Completed]
            Step 1 completed successfully.
          statusLabel: "Step 1 Completed"

      - name: Log Step 2 Progress
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).runId }}
          logMessage: |
            [Status: Step 2 Completed]
            Step 2 completed successfully.
          statusLabel: "Step 2 Completed"

      - name: Log Step 3 Progress
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).runId }}
          logMessage: |
            [Status: Step 3 Completed]
            Step 3 completed successfully.
          statusLabel: "Step 3 Completed"

      - name: Simulate Error in Step 4
        id: simulate-error
        run: |
          echo "This is an example error log for Step 4" >&2
          exit 1
        continue-on-error: true

      - name: Extract Error Details
        if: failure()
        run: |
          echo "Error Log: ${{ steps.simulate-error.outcome }}" >> $GITHUB_ENV
          echo "Error Details: Simulating error log data for debugging." >> $GITHUB_ENV
          echo "Failure Step: Step 4" >> $GITHUB_ENV

      - name: Log Step 4 Error and Update Status
        if: failure()
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).runId }}
          logMessage: |
            [Status: Error in Step 4]
            Error in Step 4: Pipeline halted due to an issue.
            Error Log: ${{ env.Error_Log }}
            Error Details: ${{ env.Error_Details }}
          statusLabel: "Error in Step 4"

      - name: Log Final Status
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).runId }}
          logMessage: |
            [Status: Pipeline Failed]
            Pipeline completed with errors.
          statusLabel: "Pipeline Failed"
